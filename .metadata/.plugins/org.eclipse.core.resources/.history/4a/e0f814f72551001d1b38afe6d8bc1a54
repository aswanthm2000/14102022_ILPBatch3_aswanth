package com.bank.service;

import java.util.ArrayList;
import java.util.Scanner;

import com.bank.entity.Account;
import com.bank.entity.Customer;

public class Service {
	
	public static Account createAccount(String accountType) {
		
		Account account = null;
		if(accountType.compareTo("Savings Max Account")==0)
		{
			account = new Account("Savings Max Account",1000);
		}
		else if(accountType.compareTo("CA")==0)
		{
			account = new Account("Current Account",1000);
		}
		else if(accountType.compareTo("LA")==0)
		{
			account = new Account("Loan Account",0);
		}
		return account;
		}
	
	
	public static Customer createCustomer(ArrayList<Account> accountList) {
		Scanner scanner=new Scanner(System.in);
		System.out.println("enter your id");
		String customerId=scanner.nextLine();
		System.out.println("enter your name");
		String customerName=scanner.nextLine();
		Customer customer = new Customer(customerId,customerName,accountList);
		return customer;
	}
	
	public static void depositMoney(ArrayList<Customer>customers) {
		
		ArrayList<Account>customerAccountList = new ArrayList<Account>();
		Scanner scanner = new Scanner(System.in);
		System.out.println("enter your id");
		String yourCustomerId=scanner.nextLine();
		for(Customer customer:customers ) {
			
			if(yourCustomerId.equals(customer.getCustomerId())) {
				customerAccountList = customer.getAccountList();
			}
			else
			{
				System.out.println("invalid customer id");
			}
		
		
	//	System.out.println("Account Name " + "     "+"Account Balance");
	
			
		for(Account account : customerAccountList) 
		
			System.out.println(account.getProductName() + "     "+ account.getAccountBalance());
		}
			
		System.out.println("Select the account you want to deposit money - ");
		String account = scanner.nextLine();
		System.out.println("Enter the amount to be deposited - ");
		double depositMoney = scanner.nextDouble();
		for(Account selectedAccount : customerAccountList)
			if(selectedAccount.getProductName().compareTo(account)==0)
			{
				
				selectedAccount.setAccountBalance(selectedAccount.getAccountBalance() + depositMoney);
			}
		}
	
	public static void displayAccountDetails(ArrayList<Account> accountList,ArrayList<Customer>customers) {
		Scanner scanner = new Scanner(System.in);
		System.out.println("enter your id");
		String yourCustomerId=scanner.nextLine();
		for(Customer customer:customers ) {
			for(Account account : customer.getAccountList()) {
			 if(yourCustomerId==customer.getCustomerId()) {
				System.out.println("customer Id"+"      "+"customer name"+"     "+"Account Name " + "         "+"Account Balance");
				
				
					System.out.println(customer.getCustomerId()+"            "+customer.getCustomerName()+"               "+account.getProductName() + "        "+ account.getAccountBalance());
					
				
			}
			
			else
			{
				System.out.println("invalid customer id");
			}
		}
		
		}
	}
}
